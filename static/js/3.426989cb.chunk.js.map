{"version":3,"sources":["pages/record/components/record-list/index.js","pages/record/index.js"],"names":["index","Component","constructor","props","super","getRecord","type","a","API","getRecords","result","setState","recordData","data","console","error","this","state","shouldComponentUpdate","nextProps","nextState","is","fromJS","componentDidMount","log","location","pathname","split","componentDidUpdate","prevProps","currenType","render","className","map","item","key","created_at","type_name","customers_name","customers_phone","product","product_name","sales_money","commission","Record","setFlagBarPos","flagBarPos","headerTitle","to","match","path","style","left","routeProps","exact","from"],"mappings":"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","file":"static/js/3.426989cb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { is, fromJS } from \"immutable\";\r\nimport API from \"@/api/api\";\r\n\r\nimport \"./index.less\";\r\n\r\nexport class index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      recordData: [],\r\n    };\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      !is(fromJS(this.props), fromJS(nextProps)) ||\r\n      !is(fromJS(this.state), fromJS(nextState))\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    console.log(this.props.location);\r\n    let type = this.props.location.pathname.split(\"/\")[2];\r\n    this.getRecord(type);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n       // 判断类型是否重复\r\n    let currenType = this.props.location.pathname.split('/')[2];\r\n    let prevType = prevProps.location.pathname.split('/')[2];\r\n    if(currenType !== prevType){\r\n      this.getRecord(currenType);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"record-list-con\">\r\n          {this.state.recordData.map((item, index) => {\r\n            return (\r\n              <li className=\"record-list-item\" key={index}>\r\n                <section className=\"item-header\">\r\n                  <span>创建时间{item.created_at}</span>\r\n                  <span>{item.type_name}</span>\r\n                </section>\r\n                <section className=\"item-content\">\r\n                  <p>\r\n                    <span>用户名：</span> {item.customers_name} &emsp;电话：\r\n                    {item.customers_phone}\r\n                  </p>\r\n                  <p>\r\n                    <span>商&emsp;品：</span>\r\n                    {item.product[0].product_name}\r\n                  </p>\r\n                  <p>\r\n                    <span>金&emsp;额：</span>\r\n                    {item.sales_money} &emsp; 佣金：{item.commission}\r\n                  </p>\r\n                </section>\r\n                <p className=\"item-footer\">\r\n                  等待管理员审核，审核通过后，佣金将结算至账户\r\n                </p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 初始化获取数据\r\n   * @param  {string} type 数据类型\r\n   */\r\n  getRecord = async (type) => {\r\n    try {\r\n      let result = await API.getRecords({ type });\r\n      this.setState({ recordData: result.data || [] });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n}\r\n\r\nexport default index;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { is, fromJS } from \"immutable\";\r\n\r\n//css\r\nimport \"./index.less\";\r\n\r\n//头部组件\r\nimport Header from \"../../components/header\";\r\n\r\n//子组件\r\nimport RecordList from \"./components/record-list\";\r\nexport default class Record extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      flagBarPos: \"17%\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // 初始化设置头部底部标签位置\r\n    let type = this.props.location.pathname.split(\"/\")[2];\r\n    this.setFlagBarPos(type);\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      !is(fromJS(this.props), fromJS(nextProps)) ||\r\n      !is(fromJS(this.state), fromJS(nextState))\r\n    );\r\n  }\r\n  //不再使用receiveProps生命周期函数\r\n  componentDidUpdate(prevProps) {\r\n    // 属性变化时设置头部底部标签位置\r\n    let currenType = this.props.location.pathname.split(\"/\")[2];\r\n    let type = prevProps.location.pathname.split(\"/\")[2];\r\n    if (currenType !== type) {\r\n      this.setFlagBarPos(currenType);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"record-container\">\r\n        <Header headerTitle=\"记录\" />\r\n        <section className=\"record-nav-con\">\r\n          <nav className=\"record-nav\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to={`${this.props.match.path}/passed`}\r\n            >\r\n              已通过\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to={`${this.props.match.path}/audited`}\r\n            >\r\n              待审核\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to={`${this.props.match.path}/failed`}\r\n            >\r\n              未通过\r\n            </NavLink>\r\n          </nav>\r\n          <i\r\n            className=\"nav-flag-bar\"\r\n            style={{ left: this.state.flagBarPos }}\r\n          ></i>\r\n        </section>\r\n        {/* 子路由在父级配置，react-router4新特性，更加灵活 */}\r\n        <Switch>\r\n          <Route\r\n            path={`${this.props.match.path}/:type`}\r\n            render={(routeProps) => <RecordList {...routeProps} />}\r\n          />\r\n\r\n          <Redirect\r\n            exact\r\n            from={`${this.props.match.path}`}\r\n            to={`${this.props.match.path}/passed`}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 设置头部底部标签位置\r\n   * @param  {string} type 数据类型\r\n   */\r\n  setFlagBarPos = (type) => {\r\n    let flagBarPos;\r\n    switch (type) {\r\n      case \"passed\":\r\n        flagBarPos = \"17%\";\r\n        break;\r\n      case \"audited\":\r\n        flagBarPos = \"50%\";\r\n        break;\r\n      case \"failed\":\r\n        flagBarPos = \"83%\";\r\n        break;\r\n      default:\r\n        flagBarPos = \"17%\";\r\n    }\r\n    this.setState({ flagBarPos });\r\n  };\r\n}\r\n"],"sourceRoot":""}