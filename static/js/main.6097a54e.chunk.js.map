{"version":3,"sources":["store/production/action-type.js","components/TouchableOpacity/index.js","components/header/index.js","envconfig/index.js","api/server.js","api/api.js","store/production/action.js","components/alert/index.js","utils/rem.js","components/hoc/asyncComponent.js","utils/mixins.js","pages/home/index.js","components/hoc/withPadStr.js","store/home/action.js","store/home/action-type.js","router/index.js","store/home/reducer.js","store/production/reducer.js","store/stroe.js","index.js"],"names":["REQUESTPRODUCTION","GETPRODUCTION","TOGGLESELECT","EDITPRODUCTION","CLEARSELECTED","TouchableOpacity","Component","constructor","props","super","this","btn","onTouchEnd","bind","onTouchStart","style","opacity","clickCallBack","shouldComponentUpdate","nextProps","nextState","is","fromJS","state","render","className","ref","text","Header","navState","toggleNav","onClick","headerTitle","record","exact","to","confirm","in","timeout","classNames","unmountOnExit","key","setState","baseUrl","imgUrl","Server","http","method","url","conf","Promise","resolve","reject","_option","baseURL","envconfig","params","data","headers","withCredentials","validateStatus","status","axios","request","then","res","JSON","stringify","catch","e","response","API","uploadImg","result","msg","getRecords","type","Object","http_code","getProduction","getBalance","getProData","dispatch","a","pro","map","item","selectStatus","selectNum","list","dataList","selectPro","index","editPro","clearSelected","Alert","onClose","alertStatus","alertContent","psdw","dpr","rem","htmlDOM","document","documentElement","window","devicePixelRatio","clientWidth","fontSize","setAttribute","asyncComponent","importComponent","AsyncComponent","component","componentDidMount","default","C","padStr","value","position","padstr","inputElement","forEach","length","substring","trim","requestAnimationFrame","setSelectionRange","Home","alertTips","selectedProList","innitData","submitForm","handleInput","upLoadImg","componentWillUnmount","componentDidUpdate","prevProps","proData","placeholder","formData","orderSum","onChange","name","maxLength","phoneNo","product_name","accept","src","imgPath","alt","filter","closeAlert","toString","clearData","event","target","replace","saveFormData","imgFile","files","reader","FileReader","onload","saveImg","readAsDataURL","newHome","connect","path","withPadStr","React","Production","Record","Balance","Help","Router","routeProps","from","defaultState","action","isFetching","immuteDataList","immuteItem","immutable","toJS","Map","set","get","i","update","createStore","combineReducers","home","production","applyMiddleware","thunk","ReactDOM","store","getElementById"],"mappings":"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","file":"static/js/main.6097a54e.chunk.js","sourcesContent":["//开始请求商品\r\nexport const REQUESTPRODUCTION = \"REQUESTPRODUCTION\";\r\n//获取商品\r\nexport const GETPRODUCTION = \"GETPRODUCTION\";\r\n//选中商品\r\nexport const TOGGLESELECT = \"TOGGLESELECT\";\r\n//编辑商品，在当前商品列表内修改数量等\r\nexport const EDITPRODUCTION = \"EDITPRODUCTION\";\r\n//清空商品\r\nexport const CLEARSELECTED = \"CLEARSELECTED \";\r\n","import React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { is, fromJS } from \"immutable\";\r\n\r\nexport default class TouchableOpacity extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.btn = null;\r\n    this.onTouchEnd = this.onTouchEnd.bind(this);\r\n    this.onTouchStart = this.onTouchStart.bind(this);\r\n  }\r\n  onTouchStart() {\r\n    this.btn.style.opacity = \"0.3\";\r\n  }\r\n  onTouchEnd() {\r\n    this.btn.style.opacity = \"1\";\r\n    this.props.clickCallBack();\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      !is(fromJS(this.props), fromJS(nextProps)) ||\r\n      !is(fromJS(this.state), fromJS(nextState))\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`btn-con ${this.props.className}`}\r\n        onTouchStart={this.onTouchStart}\r\n        onTouchEnd={this.onTouchEnd}\r\n        ref={(ref) => (this.btn = ref)}\r\n      >\r\n        {this.props.text || \"确认\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nTouchableOpacity.propTypes = {\r\n  text: PropTypes.string,\r\n  clickCallBack: PropTypes.func,\r\n  className: PropTypes.string\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { is, fromJS } from \"immutable\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./index.less\";\r\n\r\nexport default class Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      navState: false\r\n    };\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      !is(fromJS(this.props), fromJS(nextProps)) ||\r\n      !is(fromJS(this.state), fromJS(nextState))\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <header className=\"header-container\">\r\n        <span\r\n          className=\"header-slide-icon icon-catalog\"\r\n          onClick={this.toggleNav}\r\n        ></span>\r\n        <span className=\"header-title\">{this.props.headerTitle}</span>\r\n        {this.props.record && (\r\n          <NavLink exact to=\"/record\" className=\"header-link icon-jilu\" />\r\n        )}\r\n        {this.props.confirm && (\r\n          <NavLink exact to=\"/\" className=\"header-link header-link-confirm\">\r\n            确定\r\n          </NavLink>\r\n        )}\r\n        <CSSTransition\r\n          in={this.state.navState}\r\n          timeout={300}\r\n          classNames=\"nav\"\r\n          unmountOnExit\r\n        >\r\n          <aside\r\n            key=\"nav-slide\"\r\n            className=\"nav-slide-list\"\r\n            onClick={this.toggleNav}\r\n          >\r\n            <NavLink to=\"/\" exact className=\"nav-link icon-jiantou-copy-copy\">\r\n              首页\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/balance\"\r\n              exact\r\n              className=\"nav-link icon-jiantou-copy-copy\"\r\n            >\r\n              提现\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/helpcenter\"\r\n              exact\r\n              className=\"nav-link icon-jiantou-copy-copy\"\r\n            >\r\n              关于\r\n            </NavLink>\r\n          </aside>\r\n        </CSSTransition>\r\n      </header>\r\n    );\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState((state) => ({\r\n      navState: !state.navState\r\n    }));\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  headerTitle: PropTypes.string.isRequired,\r\n  record: PropTypes.any,\r\n  confirm: PropTypes.any\r\n};\r\n","/**\r\n * 全局环境配置文件\r\n */\r\n\r\nlet baseUrl;\r\nlet imgUrl = \"//elm.cangdu.org/img/\";\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  baseUrl = \"//api.cangdu.org\";\r\n} else {\r\n  baseUrl = \"//api.cangdu.org\";\r\n}\r\n\r\nexport default {\r\n  baseUrl,\r\n  imgUrl\r\n};\r\n","import axios from \"axios\";\r\nimport envconfig from \"../envconfig\";\r\n\r\n/**\r\n * 主要params参数\r\n * @params method {string} 方法名\r\n * @params url {string} 请求地址  例如：/login 配合baseURL组成完整请求地址\r\n * @params baseURL {string} 请求地址统一前缀 ***需要提前指定***  例如：http://cangdu.org\r\n * @params timeout {number} 请求超时时间 默认 30000\r\n * @params conf {object}  覆盖默认的配置 如get可在conf加data传参，post可在params传参\r\n * @params headers {string} 指定请求头信息\r\n * @params withCredentials {boolean} 请求是否携带本地cookies信息默认开启\r\n * @params validateStatus {func} 默认判断请求成功的范围 200 - 300\r\n * @return {Promise}\r\n * 其他更多拓展参看axios文档后 自行拓展\r\n * 注意：conf中的数据会覆盖method url 参数，所以如果指定了这2个参数则不需要在conf中带入\r\n * 文档地址：https://github.com/axios/axios#axios-api\r\n */\r\nexport default class Server {\r\n  http(method, url, conf) {\r\n    return new Promise((resolve, reject) => {\r\n      if (typeof conf !== \"object\") {\r\n        conf = {};\r\n      }\r\n      const _option = {\r\n        method,\r\n        url,\r\n        baseURL: envconfig.baseUrl,\r\n        timeout: 30000,\r\n        params: null,\r\n        data: null,\r\n        headers: null,\r\n        withCredentials: true, //是否携带cookies发起请求\r\n        validateStatus: (status) => {\r\n          return status >= 200 && status < 300;\r\n        },\r\n        ...conf\r\n      };\r\n      axios\r\n        .request(_option)\r\n        .then((res) => {\r\n          resolve(\r\n            typeof res.data === \"object\" ? res.data : JSON.stringify(res.data)\r\n          );\r\n        })\r\n        .catch((e) => {\r\n          if (e.response) {\r\n            reject(e.response.data);\r\n          } else {\r\n            reject(e);\r\n          }\r\n        });\r\n    });\r\n  }\r\n}\r\n//添加静态属性\r\nServer.baseURL = envconfig.baseUrl;\r\n","import Server from \"./server\";\r\n\r\nclass API extends Server {\r\n  /**\r\n   * 用途：上传图片\r\n   * @url https://elm.cangdu.org/v1/addimg/shop\r\n   * status返回1表示成功\r\n   * @method post\r\n   * @return {promise}\r\n   */\r\n  async uploadImg(params = {}) {\r\n    try {\r\n      let result = await this.http(\r\n        \"post\",\r\n        \"//elm.cangdu.org/v1/addimg/shop\",\r\n        params\r\n      );\r\n      if (result && result.status === 1) {\r\n        return result;\r\n      } else {\r\n        const e = {\r\n          msg: \"上传图片失败\",\r\n          response: result,\r\n          params,\r\n          url: \"//elm.cangdu.org/v1/addimg/shop\",\r\n        };\r\n        throw e;\r\n      }\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  用途：获取记录数据\r\n   *  @url https://api.cangdu.org/shopro/data/record\r\n   *  返回http_code为200表示成功\r\n   *  @method get\r\n   *  @return {promise}\r\n   */\r\n  async getRecords(params = {}) {\r\n    try {\r\n      let result = await this.http(\r\n        \"get\",\r\n        `/shopro/data/record/${params.type}`,\r\n        params\r\n      );\r\n      if (\r\n        result &&\r\n        result.data instanceof Object &&\r\n        result.http_code === 200\r\n      ) {\r\n        return result.data;\r\n      } else {\r\n        const e = {\r\n          msg: \"获取记录数据失败\",\r\n          response: result,\r\n          params,\r\n          url: API.baseURL + `/shopro/data/record/${params.type}`,\r\n        };\r\n        throw e;\r\n      }\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n  /**\r\n   * 用途：获取产品数据\r\n   * @url https://api.cangdu.org/shopro/data/products\r\n   * 返回http_code为200表示成功\r\n   * @method get\r\n   * @return {promise}\r\n   */\r\n  async getProduction(params = {}) {\r\n    try {\r\n      const result = await this.http(\"get\", \"/shopro/data/products\", params);\r\n      if (result && result.http_code === 200) {\r\n        return result.data.data || [];\r\n      } else {\r\n        const e = {\r\n          msg: \"获取商品数据异常\",\r\n          response: result,\r\n          params,\r\n          url: API.baseURL + \"/shopro/data/products\",\r\n        };\r\n        throw e;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 用途：获取佣金数据\r\n   * @url /shopro/data/balance\r\n   * @method get\r\n   * @return {promise}\r\n   * http_code返回200为成功\r\n   */\r\n  async getBalance(params = {}) {\r\n    try {\r\n      const result = await this.http(\"get\", \"/shopro/data/balance\", params);\r\n      if (\r\n        result &&\r\n        result.data instanceof Object &&\r\n        result.http_code === 200\r\n      ) {\r\n        return result.data.data || {};\r\n      } else {\r\n        const e = {\r\n          msg: \"获取佣金数据失败\",\r\n          response: result,\r\n          params,\r\n          url: API.baseURL + \"/shopro/data/balance\",\r\n        };\r\n        throw e;\r\n      }\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new API();\r\n","/**\r\n * actionCreator\r\n * 类似购物车（包含了对购物车的操作）\r\n */\r\nimport * as pro from \"./action-type\";\r\nimport API from \"../../api/api\";\r\n\r\nconst requestData = () => ({\r\n  type: pro.REQUESTPRODUCTION,\r\n});\r\n\r\n//请求商品数据，并初始化\r\nconst receiveData = (list) => ({\r\n  type: pro.GETPRODUCTION,\r\n  dataList: list,\r\n});\r\n\r\nexport const getProData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(requestData());\r\n      let result = await API.getProduction();\r\n\r\n      result = result.map((item) => ({\r\n        ...item,\r\n        selectStatus: true,\r\n        selectNum: 0,\r\n      }));\r\n\r\n      dispatch(receiveData(result));\r\n    } catch (error) {}\r\n  };\r\n};\r\n\r\n//选中商品\r\nexport const selectPro = (index) => ({\r\n  type: pro.TOGGLESELECT,\r\n  index,\r\n});\r\n\r\n//编辑商品\r\nexport const editPro = (index, selectNum) => ({\r\n  type: pro.EDITPRODUCTION,\r\n  index,\r\n  selectNum,\r\n});\r\n\r\n//清空商品\r\nexport const clearSelected = () => ({\r\n  type: pro.CLEARSELECTED,\r\n});\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./index.less\";\r\n\r\nimport { is, fromJS } from \"immutable\";\r\n\r\nimport TouchableOpacity from \"../TouchableOpacity\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport default class Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.confirm = this.confirm.bind(this);\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      !is(fromJS(this.props), fromJS(nextProps)) ||\r\n      !is(fromJS(this.state), fromJS(nextState))\r\n    );\r\n  }\r\n  // 关闭弹框\r\n  confirm = () => {\r\n    this.props.onClose && this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CSSTransition\r\n        in={this.props.alertStatus}\r\n        timeout={300}\r\n        classNames=\"alert\"\r\n        unmountOnExit\r\n      >\r\n        <div className=\"alert\">\r\n          <div className=\"alert-wrraper\">\r\n            <div className=\"alert-content\">{this.props.alertContent}</div>\r\n            <TouchableOpacity\r\n              className=\"confirm-btn\"\r\n              clickCallBack={this.confirm}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\nAlert.propTypes = {\r\n  onClose: PropTypes.func,\r\n  alertContent: PropTypes.string.isRequired,\r\n  alertStatus: PropTypes.bool.isRequired\r\n};\r\n","(function (psdw) {\r\n  var dpr = 0,\r\n    rem = 0,\r\n    scale = 0;\r\n  var htmlDOM = document.documentElement;\r\n  dpr = window.devicePixelRatio;\r\n  var currentWidth = htmlDOM.clientWidth;\r\n  scale = currentWidth / psdw;\r\n  rem = psdw / 10;\r\n  rem = rem * scale;\r\n  htmlDOM.style.fontSize = rem + \"px\";\r\n  htmlDOM.setAttribute(\"data-dpr\", dpr);\r\n})(750);\r\n","import React, { Component } from \"react\";\r\n\r\n/**\r\n *  异步引入组件\r\n * @param {func} importComponent \r\n */\r\nexport default function asyncComponent(importComponent) {\r\n  class AsyncComponent extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        component: null\r\n      };\r\n    }\r\n\r\n    async componentDidMount() {\r\n      const { default: component } = await importComponent();\r\n\r\n      this.setState({ component });\r\n    }\r\n\r\n    render() {\r\n      const C = this.state.component;\r\n\r\n      return C ? <C {...this.props} /> : null;\r\n    }\r\n  }\r\n\r\n  return AsyncComponent;\r\n}\r\n","/**\r\n * 用途：字符串填充函数\r\n * @value {string} 需要修改填充的值\r\n * @position {arrary} 填充的目标位置\r\n * @padStr {string} 要填充的东西（字符串）\r\n * @inputTarget {element} 目标元素\r\n */\r\nexport const padStr = (value, position, padstr, inputElement) => {\r\n  position.forEach((item, index) => {\r\n    if (value.length > item + index) {\r\n      value =\r\n        value.substring(0, item + index) +\r\n        padstr +\r\n        value.substring(item + index);\r\n    }\r\n  });\r\n  value = value.trim();\r\n  // 解决安卓部分浏览器插入空格后光标错位问题\r\n  requestAnimationFrame(() => {\r\n    inputElement.setSelectionRange(value.length, value.length);\r\n  });\r\n  return value;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { is, fromJS } from \"immutable\";\r\n//action\r\nimport { saveFormData, saveImg, clearData } from \"../../store/home/action\";\r\nimport { clearSelected } from \"../../store/production/action\";\r\n\r\n//弹窗组件\r\nimport Alert from \"../../components/alert\";\r\n//头部组件\r\nimport Header from \"../../components/header\";\r\n//按钮组件\r\nimport TouchableOpacity from \"../../components/TouchableOpacity\";\r\n\r\nimport withPadStr from \"../../components/hoc/withPadStr\";\r\n\r\nimport \"./index.less\";\r\n/**\r\n * @problem 认识到每次切换路由都会重现渲染组件，而不是走update流程\r\n * 不在state内的属性，当重新赋值时不会触发重新渲染\r\n */\r\nclass Home extends Component {\r\n  static propTypes = {};\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      alertStatus: false,\r\n      alertTips: \"\",\r\n      selectedProList: [],\r\n    };\r\n    //由props计算出来，不算state(不放入state不行)\r\n    // this.selectedProList = [];\r\n    this.innitData = this.innitData.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.upLoadImg = this.upLoadImg.bind(this);\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      !is(fromJS(this.props), fromJS(nextProps)) ||\r\n      !is(fromJS(this.state), fromJS(nextState))\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.innitData(this.props);\r\n  }\r\n  componentWillUnmount() {}\r\n  //不再使用receiveProps生命周期函数\r\n  componentDidUpdate(prevProps) {\r\n    //\r\n    if (!is(fromJS(this.props.proData), fromJS(prevProps.proData))) {\r\n      this.innitData(this.props);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <main className=\"home-container\">\r\n        <Header headerTitle=\"首页\" record />\r\n        <div>\r\n          <p className=\"common-title\">请录入您的信息</p>\r\n          <form className=\"home-form\">\r\n            <div className=\"home-form-item\">\r\n              <span>销售金额：</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"请输入订单金额\"\r\n                value={this.props.formData.orderSum}\r\n                onChange={(e) => this.handleInput(\"orderSum\", e)}\r\n              />\r\n            </div>\r\n            <div className=\"home-form-item\">\r\n              <span>客户姓名：</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"请输入客户姓名\"\r\n                value={this.props.formData.name}\r\n                onChange={(e) => this.handleInput(\"name\", e)}\r\n              />\r\n            </div>\r\n            <div className=\"home-form-item\">\r\n              <span>客户电话：</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"请输入客户电话\"\r\n                maxLength=\"13\"\r\n                value={this.props.formData.phoneNo}\r\n                onChange={(e) => this.handleInput(\"phoneNo\", e)}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <p className=\"common-title\">请选择销售的产品</p>\r\n          <Link to=\"/production\" className=\"common-select-btn\">\r\n            {this.state.selectedProList.length > 0 ? (\r\n              <ul className=\"select-pro-list\">\r\n                {this.state.selectedProList.map((item, index) => {\r\n                  return (\r\n                    <li key={index} className=\"select-pro-item ellipsis\">\r\n                      {item.product_name}x{item.selectNum}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            ) : (\r\n              \"选择产品\"\r\n            )}\r\n          </Link>\r\n        </div>\r\n        <div className=\"upload-img-con\">\r\n          <p className=\"common-title\">请上传发票凭证</p>\r\n          <div className=\"file-lable\">\r\n            <span className=\"common-select-btn\">上传图片</span>\r\n            <input type=\"file\" onChange={this.upLoadImg} accept=\"image/*\" />\r\n          </div>\r\n          <img className=\"select-img\" src={this.props.formData.imgPath} alt=\"\" />\r\n        </div>\r\n        <TouchableOpacity\r\n          className=\"submit-btn\"\r\n          text=\"提交\"\r\n          clickCallBack={this.submitForm}\r\n        />\r\n        <Alert\r\n          alertContent={this.state.alertTips}\r\n          alertStatus={this.state.alertStatus}\r\n          onClose={() => {\r\n            this.setState({\r\n              alertStatus: false,\r\n              alertTips: \"\",\r\n            });\r\n          }}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n  innitData(props) {\r\n    let selectedProList = (props.proData.dataList || []).filter((item) => {\r\n      return item.selectStatus && item.selectNum;\r\n    });\r\n    this.setState({\r\n      selectedProList,\r\n    });\r\n  }\r\n  closeAlert() {\r\n    this.setState({\r\n      alertStatus: false,\r\n      alertTips: \"\",\r\n    });\r\n  }\r\n\r\n  submitForm() {\r\n    const { orderSum, name, phoneNo, imgPath } = this.props.formData;\r\n    let alertTips = \"\";\r\n    if (!orderSum.toString().length) {\r\n      alertTips = \"请填写金额\";\r\n    } else if (!name.toString().length) {\r\n      alertTips = \"请填写姓名\";\r\n    } else if (!phoneNo.toString().length) {\r\n      alertTips = \"请填写正确手机号\";\r\n    } else if (!imgPath.toString().length) {\r\n      alertTips = \"请上传发票凭证\";\r\n    } else {\r\n      alertTips = \"添加数据成功\";\r\n      this.props.clearData();\r\n      this.props.clearSelected();\r\n    }\r\n    this.setState({\r\n      alertTips,\r\n      alertStatus: true,\r\n    });\r\n  }\r\n\r\n  handleInput(type, event) {\r\n    let value = event.target.value;\r\n    switch (type) {\r\n      case \"orderSum\":\r\n        value = value.replace(/\\D/g, \"\");\r\n        break;\r\n      case \"name\":\r\n        break;\r\n      case \"phoneNo\":\r\n        value = this.props.padStr(\r\n          value.replace(/\\D/g, \"\"),\r\n          [3, 7],\r\n          \" \",\r\n          event.target\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.props.saveFormData(type, value);\r\n  }\r\n  upLoadImg(e) {\r\n    let imgFile = e.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.props.saveImg(reader.result);\r\n    };\r\n    reader.readAsDataURL(imgFile);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  formData: state.formData,\r\n  proData: state.proData,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  //handleClick: ()=> dispatch(addNumber(1)),\r\n  saveFormData: (key, value) => dispatch(saveFormData(key, value)),\r\n  saveImg: (path) => dispatch(saveImg(path)),\r\n  clearData: () => dispatch(clearData()),\r\n  clearSelected: () => dispatch(clearSelected()),\r\n});\r\n\r\nHome.propTypes = {\r\n  //state表单数据\r\n  formData: PropTypes.object.isRequired,\r\n  //产品数据\r\n  proData: PropTypes.object.isRequired,\r\n  //保存state表单数据\r\n  saveFormData: PropTypes.func.isRequired,\r\n  //保存图片\r\n  saveImg: PropTypes.func.isRequired,\r\n  //清除formdata\r\n  clearData: PropTypes.func.isRequired,\r\n  //清除选择产品\r\n  clearSelected: PropTypes.func.isRequired,\r\n  //对输入电话的加空格处理\r\n  padStr: PropTypes.func.isRequired,\r\n};\r\n\r\nlet newHome = connect(mapStateToProps, mapDispatchToProps)(Home);\r\n//高阶组件\r\nexport default withPadStr(newHome);\r\n","import React from \"react\";\r\nimport { padStr } from \"../../utils/mixins\";\r\n\r\n//为了把padStr方法注入到目标组件中\r\nexport default function withPadStr(Component) {\r\n  return class extends React.Component {\r\n    render() {\r\n      // 将 input 组件包装在容器中，而不对其进行修改。Good!\r\n      return <Component padStr={padStr} {...this.props} />;\r\n    }\r\n  };\r\n}\r\n","import * as home from \"./action-type\";\r\n\r\n//保存表单数据\r\nexport const saveFormData = (key, value) => ({\r\n  type: home.SAVEFORMDATA,\r\n  key,\r\n  value\r\n});\r\n\r\n//保存图片\r\nexport const saveImg = (path) => ({\r\n  type: home.SAVEIMG,\r\n  path\r\n});\r\n\r\n//清除表单数据\r\nexport const clearData = () => ({\r\n  type: home.CLEARDATA\r\n});\r\n","//保存表单数据\r\nexport const SAVEFORMDATA = \"SAVEFORMDATA\";\r\n//保存图片\r\nexport const SAVEIMG = \"SAVEIMG\";\r\n//清除数据\r\nexport const CLEARDATA = \"CLEARDATA\";\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n//高阶组件，异步引入组件\r\nimport asyncComponent from \"../components/hoc/asyncComponent\";\r\n\r\nimport Home from \"../pages/home\";\r\nconst Production = asyncComponent(() => import(\"../pages/production\"));\r\nconst Record = asyncComponent(() => import(\"../pages/record\"));\r\nconst Balance=asyncComponent(() => import(\"../pages/balance\"));\r\nconst Help =asyncComponent(() => import(\"../pages/helpcenter\"));\r\n\r\nexport default class Router extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={(routeProps) => <Home {...routeProps} />}\r\n          ></Route>\r\n          <Redirect from=\"/home\" to=\"/\"></Redirect>\r\n          <Route\r\n            path=\"/production\"\r\n            render={(routeProps) => <Production {...routeProps} />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/record\"\r\n            render={(routeProps) => <Record {...routeProps} />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/balance\"\r\n            render={(routeProps) => <Balance {...routeProps} />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/helpcenter\"\r\n            render={(routeProps) => <Help {...routeProps} />}\r\n          ></Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n","import * as home from \"./action-type\";\r\n\r\nlet defaultState = {\r\n  orderSum: \"\", //销售金额\r\n  name: \"\", //客户姓名\r\n  phoneNo: \"\", //客户电话\r\n  imgPath: \"\" //发票凭证图片\r\n};\r\n\r\nexport const formData = (state = defaultState, action = {}) => {\r\n  let type = action.type;\r\n  switch (type) {\r\n    case home.SAVEFORMDATA:\r\n      return { ...state, [action.key]: action.value };\r\n    case home.SAVEIMG:\r\n      return { ...state, imgPath: action.path };\r\n    case home.CLEARDATA:\r\n      return { ...state, ...defaultState };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as pro from \"./action-type\";\r\nimport immutable from \"immutable\";\r\n\r\nlet defaultState = {\r\n  /**\r\n   * 商品数据\r\n   * @type {Array}\r\n   * example: [{\r\n   *    product_id: 1, 商品ID\r\n   *    product_name: \"PaiBot（2G/32G)\", 商品名称\r\n   *    product_price: 2999, 商品价格\r\n   *    commission: 200, 佣金\r\n   *    selectStatus: false, 是否选择\r\n   *    selectNum: 0, 选择数量\r\n   * }]\r\n   */\r\n  dataList: [],\r\n  isFetching: false,\r\n};\r\n\r\nexport const proData = (state = defaultState, action) => {\r\n  let immuteDataList;\r\n  let immuteItem;\r\n  const type = action.type;\r\n\r\n  switch (type) {\r\n    case pro.REQUESTPRODUCTION:\r\n      return { ...state, ...{ isFetching: true } };\r\n    case pro.GETPRODUCTION:\r\n      //不修改原数据\r\n      immuteDataList = immutable.fromJS(action.dataList);\r\n      // redux必须返回一个新的state\r\n      return {\r\n        ...state,\r\n        ...{ dataList: immuteDataList.toJS() },\r\n        ...{ isFetching: false },\r\n      };\r\n    case pro.TOGGLESELECT:\r\n      immuteDataList = immutable.fromJS(state.dataList);\r\n      immuteItem = immutable.Map(state.dataList[action.index]);\r\n      immuteItem = immuteItem.set(\r\n        \"selectStatus\",\r\n        !immuteItem.get(\"selectStatus\")\r\n      );\r\n      immuteDataList = immuteDataList.set(action.index, immuteItem);\r\n      return { ...state, ...{ dataList: immuteDataList.toJS() } };\r\n    case pro.EDITPRODUCTION:\r\n      immuteDataList = immutable.fromJS(state.dataList);\r\n      immuteItem = immutable.Map(state.dataList[action.index]);\r\n      immuteItem = immuteItem.set(\"selectNum\", action.selectNum);\r\n      immuteDataList = immuteDataList.set(action.index, immuteItem);\r\n      return { ...state, ...{ dataList: immuteDataList.toJS() } };\r\n    case pro.CLEARSELECTED:\r\n      //对面上面的list方法\r\n\r\n      immuteDataList = immutable.fromJS(state.dataList);\r\n      for (let i = 0; i < state.dataList.length; i++) {\r\n        //返回一个新数组\r\n        immuteDataList = immuteDataList.update(i, (item) => {\r\n          item = item.set(\"selectNum\", 0);\r\n          item = item.set(\"selectStatus\", false);\r\n          return item;\r\n        });\r\n      }\r\n\r\n      return { ...state, ...{ dataList: immuteDataList.toJS() } };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport * as home from \"./home/reducer\";\r\nimport * as production from \"./production/reducer\";\r\n\r\nexport default createStore(\r\n  combineReducers({ ...home, ...production }),\r\n  applyMiddleware(thunk)\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Router from \"./router\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/stroe\";\r\nimport \"./utils/rem\";\r\n\r\nimport \"./style/base.css\";\r\n\r\nconst render = (Component) => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <Component />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\n\r\nrender(Router);\r\n"],"sourceRoot":""}