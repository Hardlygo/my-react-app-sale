{"version":3,"sources":["pages/production/index.js"],"names":["Production","Component","componentDidMount","this","props","proData","dataList","length","getProData","shouldComponentUpdate","nextProps","nextState","is","fromJS","state","render","className","headerTitle","confirm","map","item","index","key","onClick","selectPro","selectStatus","product_name","selectNum","handleEdit","bind","toggleSelect","num","currentNum","editPro","connect","dispatch"],"mappings":"oJAAA,2GAaO,MAAMA,UAAmBC,YAQ9BC,oBACOC,KAAKC,MAAMC,QAAQC,SAASC,QAC/BJ,KAAKC,MAAMI,aAIfC,sBAAsBC,EAAWC,GAC/B,OACGC,YAAGC,YAAOV,KAAKC,OAAQS,YAAOH,MAC9BE,YAAGC,YAAOV,KAAKW,OAAQD,YAAOF,IAGnCI,SACE,OACE,0BAAMC,UAAU,iBACd,kBAAC,IAAD,CAAQC,YAAY,2BAAOC,SAAO,IAClC,6BAASF,UAAU,gBACjB,wBAAIA,UAAU,eACXb,KAAKC,MAAMC,QAAQC,SAASa,IAAI,CAACC,EAAMC,IAEpC,wBAAIC,IAAKD,EAAOL,UAAU,YACxB,yBACEA,UAAU,kBACVO,QAAS,KAAKpB,KAAKC,MAAMoB,UAAUH,KAEnC,0BACEL,UAAS,yCACPI,EAAKK,aAAe,eAAiB,MAGzC,0BAAMT,UAAU,YAAYI,EAAKM,eAEnC,yBAAKV,UAAU,iBACb,0BACEA,UAAS,oBACPI,EAAKO,UAAY,EAAI,cAAgB,IAEvCJ,QAASpB,KAAKyB,WAAWC,KAAK1B,KAAMkB,GAAQ,KAE9C,0BAAML,UAAU,WAAWI,EAAKO,WAChC,0BACEX,UAAS,WACTO,QAASpB,KAAKyB,WAAWC,KAAK1B,KAAMkB,EAAO,WAY/DS,aAAaT,GACXlB,KAAKC,MAAMoB,UAAUH,GAOvBO,WAAWP,EAAOU,GAChB,IAAIC,EAAa7B,KAAKC,MAAMC,QAAQC,SAASe,GAAOM,UAAYI,EAC5DC,EAAa,GACjB7B,KAAKC,MAAM6B,QAAQZ,EAAOW,IAcfE,sBAVUpB,IAAD,CACtBT,QAASS,EAAMT,UAGW8B,IAAD,CACzB3B,WAAY,IAAM2B,EAAS3B,eAC3BgB,UAAYH,GAAUc,EAASX,YAAUH,IACzCY,QAAS,CAACZ,EAAOM,IAAcQ,EAASF,YAAQZ,EAAOM,MAG1CO,CAA6ClC","file":"static/js/6.ebceab90.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { is, fromJS } from \"immutable\";\r\n//action\r\nimport { getProData, selectPro, editPro } from \"../../store/production/action\";\r\n\r\n//头部组件\r\nimport Header from \"../../components/header\";\r\n\r\nimport \"./index.less\";\r\n\r\nexport class Production extends Component {\r\n  static propTypes = {\r\n    proData: PropTypes.object.isRequired,\r\n    getProData: PropTypes.func.isRequired,\r\n    selectPro: PropTypes.func.isRequired,\r\n    editPro: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.proData.dataList.length) {\r\n      this.props.getProData();\r\n    }\r\n  }\r\n  //重现渲染条件\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      !is(fromJS(this.props), fromJS(nextProps)) ||\r\n      !is(fromJS(this.state), fromJS(nextState))\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <main className=\"pro-container\">\r\n        <Header headerTitle=\"选择产品\" confirm />\r\n        <section className=\"pro-list-con\">\r\n          <ul className=\"pro-list-ul\">\r\n            {this.props.proData.dataList.map((item, index) => {\r\n              return (\r\n                <li key={index} className=\"pro-item\">\r\n                  <div\r\n                    className=\"pro-item-select\"\r\n                    onClick={()=>{this.props.selectPro(index)}}\r\n                  >\r\n                    <span\r\n                      className={`icon-xuanze1 pro-select-status ${\r\n                        item.selectStatus ? \"pro-selected\" : \"\"\r\n                      }`}\r\n                    ></span>\r\n                    <span className=\"pro-name\">{item.product_name}</span>\r\n                  </div>\r\n                  <div className=\"pro-item-edit\">\r\n                    <span\r\n                      className={`icon-jian ${\r\n                        item.selectNum > 0 ? \"edit-active\" : \"\"\r\n                      }`}\r\n                      onClick={this.handleEdit.bind(this, index, -1)}\r\n                    ></span>\r\n                    <span className=\"pro-num\">{item.selectNum}</span>\r\n                    <span\r\n                      className={`icon-jia`}\r\n                      onClick={this.handleEdit.bind(this, index, 1)}\r\n                    ></span>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  toggleSelect(index) {\r\n    this.props.selectPro(index);\r\n  }\r\n  /**\r\n   * 添加或删减商品，交由redux进行数据处理，作为全局变量\r\n   * @param  {int} index 编辑的商品索引\r\n   * @param  {int} num   添加||删减的商品数量\r\n   */\r\n  handleEdit(index, num) {\r\n    let currentNum = this.props.proData.dataList[index].selectNum + num;\r\n    if (currentNum < 0) return;\r\n    this.props.editPro(index, currentNum);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  proData: state.proData,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getProData: () => dispatch(getProData()),\r\n  selectPro: (index) => dispatch(selectPro(index)),\r\n  editPro: (index, selectNum) => dispatch(editPro(index, selectNum)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Production);\r\n"],"sourceRoot":""}